# Name of your application. Used to uniquely configure containers.
service: portweb4

# Name of the container image.
image: benjaminnelson/portweb4

# Deploy to these servers.
servers:
  web:
    - 192.168.0.166

# Enable SSL auto certification via Let's Encrypt and allow for multiple apps on a single web server.
# Ensure Cloudflare is set to "Full" SSL mode.
proxy:
  ssl: true
  host: volatic.org

# Credentials for your image host.
registry:
  username: benjaminnelson
  password:
    - KAMAL_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .kamal/secrets).
env:
  clear:
    RAILS_ENV: production
    RAILS_SERVE_STATIC_FILES: true
    SOLID_QUEUE_IN_PUMA: true
    RAILS_LOG_LEVEL: debug # Log everything from Rails

    # Match this to any external database server to configure Active Record correctly
    # Use portweb4-db for a db accessory server on the same machine via the local Kamal Docker network.
    # DB_HOST: 192.168.0.2

# Store secrets securely (files stored in `.kamal/secrets/`)
secrets:
  - name: RAILS_MASTER_KEY
    path: config/master.key
  - name: KAMAL_REGISTRY_PASSWORD
    path: .kamal/secrets/KAMAL_REGISTRY_PASSWORD

# Aliases for common commands
aliases:
  console: app exec --interactive --reuse "bin/rails console"
  shell: app exec --interactive --reuse "bash"
  logs: app logs -f
  dbc: app exec --interactive --reuse "bin/rails dbconsole"

# Use a persistent storage volume for SQLite database files and local Active Storage files.
volumes:
  - "portweb4_storage:/rails/storage"

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests.
asset_path: /rails/public/assets

# Configure the image builder.
builder:
  arch: amd64
# Optional: Use accessory services (DB, Redis) if needed
# accessories:
#   db:
#     image: mysql:8.0
#     host: 192.168.0.2
#     env:
#       secret:
#         - MYSQL_ROOT_PASSWORD
#     directories:
#       - data:/var/lib/mysql
#   redis:
#     image: redis:7.0
#     host: 192.168.0.2
#     directories:
#       - data:/data
